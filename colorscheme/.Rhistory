library(testseq)
library(colorscheme)
data("testseq")
testseq
data("sampleseq")
sampleseq
a164<-sampleseq[,'V164']
a164
seq<-as.matrix(testseq)
seq<-toupper(seq)
seqnum<-dim(seq)[1]
is.character(seq[,1])
seq[,1]
a164<-toupper(as.character(a164))
a164
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,T,L,M,F,W','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',NA)
col_df<-data.frame(category,colour,re_position,thred,re_gp)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
View(col_df)
type<-rep("combined",times=24)
type[c(4,7,9,11,12,15,18,19,20,21)]<-"individual"
type
col_df$type<-type
View(col_df)
col_df$type[23]<-'individual'
View(col_df)
col_df$type[24]<-NA
View(col_df)
col_seq<-a164
col_seq
col_seq<-paste(col_seq,collapse = '')
col_seq
numdf<-as.data.frame(table(factor(col_seq)))  #get the number of each character in each column sequence
numdf$Freq<-numdf$Freq/num                  #get the frequency of each character in each column sequence
numdf$Var1<-as.character(numdf$Var1)
numdf<-numdf[!(numdf$Var1 %in% '-'),]
num=9
numdf<-as.data.frame(table(factor(col_seq)))  #get the number of each character in each column sequence
numdf$Freq<-numdf$Freq/num                  #get the frequency of each character in each column sequence
numdf$Var1<-as.character(numdf$Var1)
numdf<-numdf[!(numdf$Var1 %in% '-'),]
numdf
col_seq
as.data.frame(table(factor(col_seq)))
col_se1<-a164
col_seq
a164
col_seq<-a164
col_seq
numdf<-as.data.frame(table(factor(col_seq)))  #get the number of each character in each column sequence
numdf$Freq<-numdf$Freq/num                  #get the frequency of each character in each column sequence
numdf$Var1<-as.character(numdf$Var1)
numdf<-numdf[!(numdf$Var1 %in% '-'),]
numdf
col_seq<-paste(col_seq,collapse = '')
chars<-numdf$Var1
chars
for(i in 1:length(chars)){
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of chars[i] in the column sequence
col_df1<-col_df[col_df$re_position %in% e,]
return(col_df1)
}
library(stringr)
for(i in 1:length(chars)){
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of chars[i] in the column sequence
col_df1<-col_df[col_df$re_position %in% e,]
return(col_df1)
}
View(col_df1)
i=1
e<-chars[i]
e
index<-str_locate_all(col_seq,e)[[1]][,1]
index
View(col_df)
col_df1<-col_df[col_df$re_position %in% e,]
col_df1
View(col_df)
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('ATLMFW','C','KR','E','D','N','Q','ST','C','G','P','HY',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',NA)
col_df<-data.frame(category,colour,re_position,thred,re_gp)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
type
type[c(23,24)]<-c("individual",NA)
type
col_df$type<-type<-type
i=2
for(i in 1:length(chars)){
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of chars[i] in the column sequence
col_df1<-col_df[col_df$re_position %in% e,]
return(col_df1)
}
View(col_df)
View(col_df1)
col_df$re_position
write.table(col_df,file="C:/Users/huina/Desktop/scheme.txt")
write.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt")
e=K
e='k'
e='K'
col_df1<-col_df[col_df$re_position %in% e,]
col_df1<-col_df[str_detect(col_df$re_position,e),]
View(col_df1)
col_df$re_position<-rep(c('A,T,L,M,F,W','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
View(col_df)
write.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt")
read.table("C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
col_seq
chars
View(col_df)
type<-rep("combined",times=24)
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
type<-rep("combined",times=23)
type[24]<-NA
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
type
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
View(col_df)
write.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt")
read.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=t)
read.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
chars
for(i in 1:length(chars)){
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of chars[i] in the column sequence
col_df1<-col_df[str_detect(col_df$re_position,e),]
return(col_df1)
}
View(col_df1)
col_df1<-col_df[str_detect(col_df$re_position,chars),]
View(col_df)
View(col_df1)
e='Q'
col_df1<-col_df[str_detect(col_df$re_position,e),]
View(col_df1)
View(col_df1)
e='I'
col_df1<-col_df[str_detect(col_df$re_position,e),]
col_df1
col_df$type
is.character(col_df$type)
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
col_df$type<-as.character(col_df$type)
col_df$type
is.character(col_df$type)
write.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt")
read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
col_df<-read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
is.character(col_df$type)
col_df$type
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
col_df$type<-as.character(col_df$type)
col_df$type
is.character(col_df$type)
write.table(col_df,file="C:/Users/huina/Desktop/colorscheme/scheme.txt")
col_df11<-read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
col_df11$type
col_df11$re_gp
apply(col_df11,2,function(x){as.character(x)})
col_df
col_df$re_gp
col_dfread<-read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
col_dfread
col_dfread$re_gp
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_dfread$colour<-as.character(col_dfread$colour)
col_dfread$re_gp<-as.character(col_dfread$re_gp)
col_dfread$re_position<-as.character(col_dfread$re_position)
col_dfread$type<-as.character(col_dfread$type)
col_dfread$re_gp
#创建颜色方案的数据框索引
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
col_df$type<-as.character(col_df$type)
col_df[,-4]
col_dfread<-read.table(file="C:/Users/huina/Desktop/colorscheme/scheme.txt",header=T)
col_dfread
is.character(col_dfread)
apply(col_dfread[,-4],2,function(x){as.character(x)})
col_dfread[,-4]<-apply(col_dfread[,-4],2,function(x){as.character(x)})
col_dfread
is.character(col_dfread$re_gp)
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','K,R,Q','KR','QE','E,Q,D','KR','K,R,Q','ED','N','N,Y','KR','QE','Q,E,K,R','WLVIMAFCHP','TS','S,T','C','G','P','WLVIMAFCHP','W,Y,A,C,P,Q,F,H,I,L,M,V',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
col_df$type<-as.character(col_df$type)
chars
col_seq
for(i in 1:length(chars)){
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of chars[i] in the column sequence
col_df1<-col_df[str_detect(col_df$re_position,e),]
return(col_df1)
}
View(col_df1)
j=9
col_df1$type[j]=="individual"
col_df1$type
j=1
col_df1$type[j]=="combined"
col_df$re_gp
category<-rep(c("Hydrophobic","Positive charge","Negative charge","Polar","Cysteines","Glycines","Prolines","Aromatic","Unconserved"),c(2,2,6,8,1,1,1,2,1))
colour<-rep(c("blue","red","magenta","green","pink","orange","yellow","cyan","white"),c(2,2,6,8,1,1,1,2,1))
re_position<-rep(c('A,I,L,M,F,W,V','C','K,R','E','D','N','Q','S,T','C','G','P','H,Y',"-,any"),c(1,1,2,3,3,2,3,3,1,1,1,2,1))
thred<-c(rep(0.6,each=3),0.8,0.6,0.5,0.85,0.6,0.85,0.5,0.5,0.85,rep(c(0.6,0.5,0.85),times=2),0.85,0,0,0.6,0.85,0)
re_gp<-c(rep('WLVIMAFCHP',each=2),'KR','KRQ','KR','QE','EQD','KR','KRQ','ED','N','NY','KR','QE','QEKR','WLVIMAFCHP','TS','ST','C','G','P','WLVIMAFCHP','WYACPQFHILMV',"if none of the above criteria are met")
type<-rep("combined",times=23)
type[24]<-"any"
type[c(4,7,9,11,12,15,18,19,20,21,23)]<-"individual"
col_df<-data.frame(category,colour,re_position,thred,re_gp,type)
col_df$colour<-as.character(col_df$colour)
col_df$re_gp<-as.character(col_df$re_gp)
col_df$re_position<-as.character(col_df$re_position)
col_df$type<-as.character(col_df$type)
View(col_df)
e='Q'
e<-chars[i]
index<-str_locate_all(col_seq,e)[[1]][,1]   #get the location of e in the column sequence
col_df1<-col_df[str_detect(col_df$re_position,e),]
View(col_df)
View(col_df1)
i=2
e<-chars[i]
e
col_df$re_position
col_df1<-col_df[str_detect(col_df$re_position,e),]
View(col_df1)
index
numdf[,1]
j=3
numdf[,1][numdf[,1] %in% col_df1$re_gp[j]]
group<-str_match(numdf[,1],)
col_df1$re_gp[j]
str_match(numdf[,1],col_df1$re_gp[j])
numdf
nrow(numdf)
chars<-numdf$Var1     #chars is a vector containing character in column sequence except "-"
indexlist<-lapply(chars,function(x){str_locate_all(col_seq,x)[[1]][,1]})
#get the location of each character of chars in the column sequence
indexlist
chars<-numdf$Var1
fre<-numdf$Freq
chars
index<-str_locate_all(col_seq,chars[i])[[1]][,1]
index
col_seq
col_df1<-col_df[str_detect(col_df$re_position,e),]
View(col_df1)
chars
col_df1$re_gp[3][chars %in% col_df$re_gp[3]]
col_df1$re_gp[3]
x<-col_df1$re_gp[3]
x
x[chars %in% x]
is.vector(x)
is.vector(chars)
x[c("Q",'I') %in% x]
x["Q" %in% x]
X
x
all[chars %in% x]
x[x %in% 'Q']
table(factor(x,levels = chars))
chars
x
table(factor(unlist(x,levels = chars)))
table(factor(unlist(x),levels = chars)))
table(factor(unlist(x),levels = chars))
unlist(x)
str_match(x,chars)
!(is.na(str_match(x,chars)))
y<-str_match(x,chars)
y
y<-y[!(is.na(y))]
y
